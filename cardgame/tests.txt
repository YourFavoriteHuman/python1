from Card import Card
from Deck import Deck
from Pile import Pile
from tkinter import Tk, Label
from PIL import Image, ImageTk

root = Tk()
root.title("Image example")

im = Image.open("7_of_clubs.jpg")
image = im.resize((round(im.size[0]*0.2), round(im.size[1]*0.2)))
photo = ImageTk.PhotoImage(image)

image_label = Label(root, image=photo)
image_label.pack()

# root.mainloop()

d = Deck()
d.build()
d.shuffle()

player1 = Pile("Player 1 Hand")
player1_balance = 100


stillPlaying = True

while stillPlaying:
    player1_bet = int(input("how much do you want to bet?: "))    
    player1_color = input("Choose red or black: ")
    player1_color = player1_color.title()

    for _ in range(5):
        player1.add_card(d.deal())
     
    print("the following cards were dealt to the player:")   
    player1.show()
    

    count = 0
    
    for each_card in player1.cards:
        print(each_card.color)
    
    exit()        
    if count >= 3:
        print(f"you won since {count} cards were {player1_color}")
        player1_balance += player1_bet
        
    else:
        print(f"you lost since {count} cards were {player1_color}")
        player1_balance -= player1_bet
        
    player1.remove_all()
        
    if player1_balance == 0:
        stillPlaying = False
        

'''
c1 = Card("Hearts", 12) 
c2 = Card("Spades", 9)

print(c1.name)
print(c1.color)
print("Suit:", c1.suit)
print(c1.long_name)

print(c1.value)

print(c1.front_image)
print(c1.back_image)
print(c1)
print(repr(c1))
'''
'''
d = Deck()
d.build()
player_hand = d.deal()
print("\n")
d.show()
d.return_card(player_hand)
d.show()
'''
'''
print()
d.shuffle().show()

print("\n", d.deal(), d.deal(), d.deal(), d.deal(), "\n")

d.show()


'''
         
'''
        p1Table.pile_of_cards = [p1Hand.pile_of_cards.pop(random.randint(0, (len(p1Hand.pile_of_cards) - 1))) for i in range(3)]
    else:
        print("computer wins the game!")
        gamerunning = False
        break
    if len(p2Hand.pile_of_cards) > 3:    
        p2Table.pile_of_cards = [p1Hand.pile_of_cards.pop(random.randint(0, len(p1Hand.pile_of_cards) - 1)) for i in range(3)]
    else:
        print("player wins!")
        gamerunning = False
        break
    print("I played: \n", " ".join(p1Table.pile_of_cards))
    input()
    print("Computer played: \n", " ".join(p2Table.pile_of_cards))
    
    
    if p1Table.pile_of_cards[-1] > p2Table.pile_of_cards[-1]:
        p1Table.pile_of_cards.extend([p2Table.pile_of_cards.pop(0), p2Table.pile_of_cards.pop(1), p2Table.pile_of_cards.pop(-1)])
        print("\n", p1Table.pile_of_cards, "\n", p1Hand.pile_of_cards)
        print("Player win")
        
        
    elif p2Table.pile_of_cards[-1] > p1Table.pile_of_cards[-1]:
        p2Table.pile_of_cards.extend([p1Table.pile_of_cards.pop(0), p1Table.pile_of_cards.pop(1), p1Table.pile_of_cards.pop(-1)])
        print("\n",p2Table.pile_of_cards, "\n", p1Hand.pile_of_cards)
        print("computer win")
        
        
    elif p1Table.pile_of_cards[-1] == p2Table.pile_of_cards[-1]:
        print("war time!")
        p1Table.pile_of_cards = [random.choice(p1Hand.pile_of_cards) for i in range(2)]
        p2Table.pile_of_cards = [random.choice(p2Hand.pile_of_cards) for i in range(2)]
        
        
        if p1Table.pile_of_cards[-1] > p2Table.pile_of_cards[-1]:
            p1Table.pile_of_cards.extend([p2Table.pile_of_cards.pop(0), p2Table.pile_of_cards.pop(1), p2Table.pile_of_cards.pop(-1)])
            print(p1Table.pile_of_cards)
            print("Player win")
            
            
        elif p2Table.pile_of_cards[-1] > p1Table.pile_of_cards[-1]:
            p2Table.pile_of_cards.extend([p1Table.pile_of_cards.pop(0), p1Table.pile_of_cards.pop(1), p1Table.pile_of_cards.pop(-1)])
            print(p2Table.pile_of_cards)
            print("computer win")
        
        
    elif p1Table.pile_of_cards[1] == p2Table.pile_of_cards[1]:
        print("war time!")
        p1Table.pile_of_cards = [random.choice(p1Hand.pile_of_cards) for i in range(2)]
        p2Table.pile_of_cards = [random.choice(p2Hand.pile_of_cards) for i in range(2)]
        
        
        if p1Table.pile_of_cards[-1] > p2Table.pile_of_cards[-1]:
            p1Table.pile_of_cards.extend([p2Table.pile_of_cards.pop(0), p2Table.pile_of_cards.pop(1), p2Table.pile_of_cards.pop(-1)])
            print(p1Table.pile_of_cards)
            print("Player win")
            
            
        elif p2Table.pile_of_cards[-1] > p1Table.pile_of_cards[-1]:
            p2Table.pile_of_cards.extend([p1Table.pile_of_cards.pop(0), p1Table.pile_of_cards.pop(1), p1Table.pile_of_cards.pop(-1)])
            print(p2Table.pile_of_cards)
            print("computer win")
        
        
    elif p1Table.pile_of_cards[0] == p2Table.pile_of_cards[0]:
        print("war time!")
        p1Table.pile_of_cards = [random.choice(p1Hand.pile_of_cards) for i in range(2)]
        p2Table.pile_of_cards = [random.choice(p2Hand.pile_of_cards) for i in range(2)]
        
        
        if p1Table.pile_of_cards[-1] > p2Table.pile_of_cards[-1]:
            p1Table.pile_of_cards.extend([p2Table.pile_of_cards.pop(0), p2Table.pile_of_cards.pop(1), p2Table.pile_of_cards.pop(-1)])
            print(p1Table.pile_of_cards)
            print("Player win")
            
            
        elif p2Table.pile_of_cards[-1] > p1Table.pile_of_cards[-1]:
            p2Table.pile_of_cards.extend([p1Table.pile_of_cards.pop(0), p1Table.pile_of_cards.pop(1), p1Table.pile_of_cards.pop(-1)])
            print(p2Table.pile_of_cards)
            print("computer win")
        
    
    if not (p1Hand.size() >= 1 and p2Hand.size() >= 1):
        gamerunning = False
        break
'''